{"version":3,"sources":["components/NewExpense/ExpenseForm.module.css","components/Expenses/ExpenseDate.module.css","components/Expenses/ExpenseItem.module.css","components/Expenses/ExpensesFilter.module.css","components/Chart/ChartBar.module.css","components/Expenses/ExpensesList.module.css","components/NewExpense/NewExpense.module.css","components/UI/Card.module.css","components/Chart/Chart.module.css","components/Expenses/Expenses.module.css","components/NewExpense/DummyDataButton.module.css","components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Expenses/ExpensesFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/DummyDataButton.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["module","exports","ExpenseDate","props","month","date","toLocaleString","year","getFullYear","day","className","classes","Card","card","children","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ExpensesFilter","value","selected","onChange","event","onChangeFilter","target","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","chart","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","DummyDatButton","start","end","DUMMY_EXPENSE_TITLES","floor","random","Date","getTime","toISOString","slice","onClick","onGenerateDummyData","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","onSaveExpenseData","type","min","step","NewExpense","isEditing","setIsEditing","enteredExpenseData","onAddExpense","onCancel","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6a5962b6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"new-expense__controls\":\"ExpenseForm_new-expense__controls__3O6L-\",\"new-expense__control\":\"ExpenseForm_new-expense__control__n9IaJ\",\"new-expense__actions\":\"ExpenseForm_new-expense__actions__2XEOF\",\"new-expense__button\":\"ExpenseForm_new-expense__button__32bQw\",\"alternative\":\"ExpenseForm_alternative__2wI-l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"expense-date\":\"ExpenseDate_expense-date__1sCps\",\"expense-date__month\":\"ExpenseDate_expense-date__month__55LFy\",\"expense-date__year\":\"ExpenseDate_expense-date__year__2ASJG\",\"expense-date__day\":\"ExpenseDate_expense-date__day__1IOZr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"expense-item\":\"ExpenseItem_expense-item__2-5mo\",\"expense-item__description\":\"ExpenseItem_expense-item__description__3rLqH\",\"expense-item__h2\":\"ExpenseItem_expense-item__h2__1fQmT\",\"expense-item__price\":\"ExpenseItem_expense-item__price__35PdO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"expenses-filter\":\"ExpensesFilter_expenses-filter__2a-JE\",\"expenses-filter__control\":\"ExpensesFilter_expenses-filter__control__2h19O\",\"expenses-filter__label\":\"ExpensesFilter_expenses-filter__label__v1US2\",\"expenses-filter__select\":\"ExpensesFilter_expenses-filter__select__1ePt-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chart-bar\":\"ChartBar_chart-bar__3VdAh\",\"chart-bar__inner\":\"ChartBar_chart-bar__inner__B6p1Q\",\"chart-bar__fill\":\"ChartBar_chart-bar__fill__1hUP-\",\"chart-bar__label\":\"ChartBar_chart-bar__label__1l16r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"expenses-list\":\"ExpensesList_expenses-list__2Vr6m\",\"expenses-list__fallback\":\"ExpensesList_expenses-list__fallback__38D1M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"new-expense\":\"NewExpense_new-expense__2OVll\",\"new-expense__button\":\"NewExpense_new-expense__button__1CzVY\",\"alternative\":\"NewExpense_alternative__3GAAh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__76is3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chart\":\"Chart_chart__29XAK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"expenses\":\"Expenses_expenses__nqnvV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dummy-button\":\"DummyDataButton_dummy-button__1BuRX\"};","import classes from \"./ExpenseDate.module.css\";\r\n\r\nconst ExpenseDate = (props) => {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const year = props.date.getFullYear();\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n\r\n  return (\r\n    <div className={classes[\"expense-date\"]}>\r\n      <div className={classes[\"expense-date__month\"]}>{month}</div>\r\n      <div className={classes[\"expense-date__year\"]}>{year}</div>\r\n      <div className={classes[\"expense-date__day\"]}>{day}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseDate;\r\n","import classes from \"./Card.module.css\";\r\n\r\nconst Card = (props) => {\r\n  return (\r\n    <div className={`${classes.card} ${props.className}`}>{props.children}</div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\nimport classes from \"./ExpenseItem.module.css\";\r\n\r\nconst ExpenseItem = (props) => {\r\n  return (\r\n    <li>\r\n      <Card className={classes[\"expense-item\"]}>\r\n        <ExpenseDate date={props.date} />\r\n        <div className={classes[\"expense-item__description\"]}>\r\n          <h2 className={classes[\"expense-item__h2\"]}>{props.title}</h2>\r\n          <div className={classes[\"expense-item__price\"]}>\r\n            {props.amount}EUR\r\n          </div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import ExpenseItem from \"./ExpenseItem\";\r\nimport classes from \"./ExpensesList.module.css\";\r\n\r\nconst ExpensesList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <h2 className={classes[\"expenses-list__fallback\"]}>Found no expenses.</h2>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ul className={classes[\"expenses-list\"]}>\r\n      {props.items.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import classes from \"./ExpensesFilter.module.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const dropdownChangeHandler = (event) => {\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes[\"expenses-filter\"]}>\r\n      <div className={classes[\"expenses-filter__control\"]}>\r\n        <label className={classes[\"expenses-filter__label\"]}>\r\n          Filter by year\r\n        </label>\r\n        <select\r\n          className={classes[\"expenses-filter__select\"]}\r\n          value={props.selected}\r\n          onChange={dropdownChangeHandler}\r\n        >\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import classes from \"./ChartBar.module.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = \"0%\";\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n\r\n  return (\r\n    <div className={classes[\"chart-bar\"]}>\r\n      <div className={classes[\"chart-bar__inner\"]}>\r\n        <div\r\n          className={classes[\"chart-bar__fill\"]}\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className={classes[\"chart-bar__label\"]}>{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import ChartBar from \"./ChartBar\";\r\nimport classes from \"./Chart.module.css\";\r\n\r\nconst Chart = (props) => {\r\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointValues);\r\n\r\n  return (\r\n    <div className={classes.chart}>\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth();\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import { useState } from \"react\";\r\n\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpenseFilter from \"./ExpensesFilter\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\nimport classes from \"./Expenses.module.css\";\r\n\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState(\"2021\");\r\n\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const filteredExpenses = props.items.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n  return (\r\n    <Card className={classes.expenses}>\r\n      <ExpenseFilter\r\n        selected={filteredYear}\r\n        onChangeFilter={filterChangeHandler}\r\n      />\r\n      <ExpensesChart expenses={filteredExpenses} />\r\n      <ExpensesList items={filteredExpenses} />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import classes from \"./DummyDataButton.module.css\";\r\n\r\nconst DummyDatButton = (props) => {\r\n  // setting up some dummy data\r\n  const DUMMY_EXPENSE_TITLES = [\r\n    \"Refrigerator\",\r\n    \"Book\",\r\n    \"Washing Machine\",\r\n    \"Keyboard\",\r\n    \"Graphics Card\",\r\n    \"Optic Cable\",\r\n    \"Saxophone\",\r\n    \"Cigarettes\",\r\n    \"Tooth Paste\",\r\n    \"Newest Manga Chapter\",\r\n  ];\r\n\r\n  /* \r\n    Function to generate random date found on https://gist.github.com/miguelmota/5b67e03845d840c949c4\r\n    \r\n    randomDate takes two parameters, start and end, start date is hardcoded into the code, it also\r\n    represents the earliest possible date you can filter by so hard coding this value didn't seem like\r\n    a bad idea. randomDate gets the starting time adds a random math float to it and then multiplies that\r\n    value with the subtraction result of the end parameter, which is set to always get the current time and \r\n    the starting time, thus generating a value in range of these two parameters. \r\n  */\r\n\r\n  const randomDate = (start, end) => {\r\n    return new Date(\r\n      start.getTime() + Math.random() * (end.getTime() - start.getTime())\r\n    );\r\n  };\r\n\r\n  const title =\r\n    DUMMY_EXPENSE_TITLES[\r\n      // Pick a random title from the DUMMY_EXPENSE_TITLES array\r\n      Math.floor(Math.random() * DUMMY_EXPENSE_TITLES.length)\r\n    ];\r\n\r\n  // Generate a random floored number in range from 1 to 500\r\n  const amount = Math.floor(Math.random() * 500) + 1;\r\n\r\n  // Process the random date data, convert it into a string then cut anything but the\r\n  // part which contains the actual date in the yyyy-mm-dd format.\r\n  const date = randomDate(new Date(2019, 0, 1), new Date())\r\n    .toISOString()\r\n    .slice(0, 10);\r\n\r\n  // Pass data to parent component by listening to the onClick button event\r\n  const generateDummyData = (event) => {\r\n    props.onGenerateDummyData(title, amount, date);\r\n  };\r\n\r\n  return (\r\n    <button className={classes[\"dummy-button\"]} onClick={generateDummyData}>\r\n      Dummy Data\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default DummyDatButton;\r\n\r\n/*\r\n    Possible better solution could be to return data in bulk, using objects, instead of sending\r\n    three parameters.\r\n*/\r\n","import { useState } from \"react\";\r\nimport DummyDatButton from \"./DummyDataButton\";\r\n\r\nimport classes from \"./ExpenseForm.module.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n  };\r\n\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n\r\n    props.onSaveExpenseData(expenseData);\r\n\r\n    setEnteredTitle(\"\");\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n  };\r\n\r\n  const fillInDummyData = (title, amount, date) => {\r\n    setEnteredTitle(title);\r\n    setEnteredAmount(amount);\r\n    setEnteredDate(date);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={submitHandler}>\r\n        <div className={classes[\"new-expense__controls\"]}>\r\n          <div className={classes[\"new-expense__control\"]}>\r\n            <label>Title</label>\r\n            <input\r\n              type=\"text\"\r\n              value={enteredTitle}\r\n              onChange={titleChangeHandler}\r\n            />\r\n          </div>\r\n          <div className={classes[\"new-expense__control\"]}>\r\n            <label>Amount</label>\r\n            <input\r\n              type=\"number\"\r\n              min=\"0.01\"\r\n              step=\"0.01\"\r\n              value={enteredAmount}\r\n              onChange={amountChangeHandler}\r\n            />\r\n          </div>\r\n          <div className={classes[\"new-expense__control\"]}>\r\n            <label>Date</label>\r\n            <input\r\n              type=\"date\"\r\n              min=\"2019-01-01\"\r\n              max=\"2022-12-31\"\r\n              value={enteredDate}\r\n              onChange={dateChangeHandler}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className={classes[\"new-expense__actions\"]}>\r\n          <button className={classes[\"new-expense__button\"]} type=\"submit\">\r\n            Add Expense\r\n          </button>\r\n        </div>\r\n      </form>\r\n      <DummyDatButton onGenerateDummyData={fillInDummyData} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import { useState } from \"react\";\r\n\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport classes from \"./NewExpense.module.css\";\r\n\r\nconst NewExpense = (props) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n\r\n    props.onAddExpense(expenseData);\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const startEditingHandler = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const stopEditingHandler = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes[\"new-expense\"]}>\r\n      {!isEditing && (\r\n        <button\r\n          className={classes[\"new-expense__button\"]}\r\n          onClick={startEditingHandler}\r\n        >\r\n          Add new expense\r\n        </button>\r\n      )}\r\n      {isEditing && (\r\n        <ExpenseForm\r\n          onSaveExpenseData={saveExpenseDataHandler}\r\n          onCancel={stopEditingHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import { useState } from \"react\";\n\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"0\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  {\n    id: \"1\",\n    title: \"New TV\",\n    amount: 799.49,\n    date: new Date(2021, 2, 12),\n  },\n  {\n    id: \"2\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"3\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}