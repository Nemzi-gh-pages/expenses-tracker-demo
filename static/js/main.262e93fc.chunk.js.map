{"version":3,"sources":["components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesFilter.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpenseDate","props","month","date","toLocaleString","year","getFullYear","day","className","Card","classes","children","ExpenseItem","title","amount","ExpensesFilter","value","selected","onChange","event","onChangeFilter","target","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","items","filter","expense","toString","selectedYear","map","id","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","max","NewExpense","enteredExpenseData","Math","random","onAddExpense","DUMMY_EXPENSES","App","expenses","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.262e93fc.chunk.js","sourcesContent":["import \"./ExpenseDate.css\";\r\n\r\nconst ExpenseDate = (props) => {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const year = props.date.getFullYear();\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseDate;\r\n","import \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n  const classes = \"card \" + props.className;\r\n\r\n  return <div className={classes}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./ExpenseItem.css\";\r\n\r\nconst ExpenseItem = (props) => {\r\n  return (\r\n    <Card className=\"expense-item\">\r\n      <ExpenseDate date={props.date} />\r\n      <div className=\"expense-item__description\">\r\n        <h2>{props.title}</h2>\r\n        <div className=\"expense-item__price\">{props.amount}RSD</div>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const dropdownChangeHandler = (event) => {\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import { useState } from \"react\";\r\n\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport ExpenseFilter from \"./ExpensesFilter\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./Expenses.css\";\r\n\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\r\n\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const filteredExpenses = props.items.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpenseFilter\r\n        selected={filteredYear}\r\n        onChangeFilter={filterChangeHandler}\r\n      />\r\n      {filteredExpenses.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import { useState } from \"react\";\r\n\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n  };\r\n\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n\r\n    props.onSaveExpenseData(expenseData);\r\n\r\n    setEnteredTitle(\"\");\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            value={enteredAmount}\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            value={enteredDate}\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n\r\n// const [userInput, setUserInput] = useState({\r\n//   enteredTitle: \"\",\r\n//   enteredAmount: \"\",\r\n//   enteredDate: \"\",\r\n// });\r\n// setUserInput({\r\n//   ...userInput,\r\n//   enteredTitle: event.target.value,\r\n// // }); if depending on previous state it is better to use this arrow function\r\n// setUserInput((prevState) => {\r\n//   return { ...prevState, enteredTitle: event.target.value };\r\n// });\r\n","import ExpenseForm from \"./ExpenseForm\";\r\nimport \"./NewExpense.css\";\r\n\r\nconst NewExpense = (props) => {\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n\r\n    props.onAddExpense(expenseData);\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import { useState } from \"react\";\n\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  {\n    id: \"e2\",\n    title: \"New TV\",\n    amount: 799.49,\n    date: new Date(2021, 2, 12),\n  },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}